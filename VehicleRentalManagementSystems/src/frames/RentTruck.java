/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static jdbc.JdbcConnection.getConnection;

/**
 *
 * @author Asus
 */
public class RentTruck extends javax.swing.JFrame {

    /**
     * Creates new form RentTruck
     */
    public RentTruck() {
        initComponents();
        loadCarList();
    }
    
    private void loadCarList(){
        DefaultTableModel model = (DefaultTableModel) tabletruck.getModel();
        model.setRowCount(0);
        try (Connection con = getConnection();
               java.sql.Statement st = con.createStatement();
               ResultSet rs = st.executeQuery("SELECT * FROM truck")) {
            
         
            while (rs.next()) {
                
               String id = rs.getString("ID");
               String plate = rs.getString("Plate_No");
               String brand = rs.getString("Brand");
               String models = rs.getString("Model");
               int year = rs.getInt("Year");
               double price = rs.getDouble("Price");
               String status = rs.getString("Status");
             model.addRow(new Object[] {id, plate,brand,models,year,price,status});
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to show Car List");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabletruck = new javax.swing.JTable();
        renttruck = new javax.swing.JButton();
        returntruck = new javax.swing.JButton();
        menu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 255, 255));

        tabletruck.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Plate", "Model", "Brand", "Year", "Price ", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabletruck);

        renttruck.setText("Rent Vehicle");
        renttruck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renttruckActionPerformed(evt);
            }
        });

        returntruck.setText("Return Vehicle");
        returntruck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returntruckActionPerformed(evt);
            }
        });

        menu.setText("Back to Main Menu");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(renttruck)
                .addGap(92, 92, 92)
                .addComponent(returntruck)
                .addGap(73, 73, 73)
                .addComponent(menu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(194, 194, 194)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(renttruck)
                    .addComponent(returntruck)
                    .addComponent(menu))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void renttruckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renttruckActionPerformed
      DefaultTableModel model = (DefaultTableModel) tabletruck.getModel();
        int selected = tabletruck.getSelectedRow();
       if (selected == -1) {
           JOptionPane.showMessageDialog(this, "Please Select a Vehicle to rent.");
           return;
       }
        
       String status = model.getValueAt(selected, 6).toString();
        if (!status.equals("Available")) {
            JOptionPane.showMessageDialog(this, "Vehicle is not available.");
            return;
        }
         if (status.equalsIgnoreCase("Not Available")) {
           JOptionPane.showMessageDialog(this, "The Vehicle is already rented");
           return;
        }
         String plates = model.getValueAt(selected, 1).toString();
        double pricePerDay = Double.parseDouble(model.getValueAt(selected, 5).toString());
        double total = pricePerDay * MainFrame.rentaldays;
       
        try (Connection con = getConnection();
                PreparedStatement ps = con.prepareStatement("UPDATE truck SET Status = 'Not Available' WHERE Plate_No =?")) {
                ps.setString(1, plates);
                ps.executeUpdate();
                
                
                
                PreparedStatement ps2 = con.prepareStatement("INSERT INTO rentals (Client_Name, Plate_No, Rental_Days, Total) VALUES (?, ?, ?, ?)");
                 ps2.setString(1, MainFrame.name);
                 ps2.setString(2, plates);
                 ps2.setInt(3, MainFrame.rentaldays);
                 ps2.setDouble(4, total);
                 ps2.executeUpdate();
                
                 String receipt = "==== VEHICLE RENTAL RECEIPT ====\n"
                       + "Client Name: " + MainFrame.name + "\n"
                       + "Plate No: " + plates + "\n"
                       + "Rental Days: " + MainFrame.rentaldays + "\n"
                       + "Price per Day: ₱" + pricePerDay + "\n"
                       + "-----------------------------\n"
                       + "Total: ₱" + total + "\n"
                       + "==============================";

                JOptionPane.showMessageDialog(this, receipt, "receipt", JOptionPane.INFORMATION_MESSAGE);
                loadCarList();
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to update Vehicle status.");
        }
                                    
               
    }//GEN-LAST:event_renttruckActionPerformed

    private void returntruckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returntruckActionPerformed
        int row = tabletruck.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Please select a Vehicle to return.");
        return;
    }

    String status = tabletruck.getValueAt(row, 6).toString();
    if (status.equalsIgnoreCase("Available")) {
        JOptionPane.showMessageDialog(this, "This vehicle is not currently rented.");
        return;
    }

    String plate = tabletruck.getValueAt(row, 1).toString();
    String client = MainFrame.name;

    try (Connection con = getConnection()) {
        
        PreparedStatement ps = con.prepareStatement("UPDATE truck SET Status = 'Available' WHERE Plate_No = ?");
        ps.setString(1, plate);
        ps.executeUpdate();

        JOptionPane.showMessageDialog(this, "Vehicle returned successfully.");
        loadCarList(); // Refresh table

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error during return.");
    }

    }//GEN-LAST:event_returntruckActionPerformed

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        DashBoard dash = null;
        try {
            dash = new DashBoard();
        } catch (SQLException ex) {
            Logger.getLogger(RentTruck.class.getName()).log(Level.SEVERE, null, ex);
        }
        dash.setVisible(true);
        dispose();
    }//GEN-LAST:event_menuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RentTruck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RentTruck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RentTruck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RentTruck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RentTruck().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton menu;
    private javax.swing.JButton renttruck;
    private javax.swing.JButton returntruck;
    private javax.swing.JTable tabletruck;
    // End of variables declaration//GEN-END:variables
}
